name: Symfony Tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: weather_db_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.3'
          extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql
          coverage: xdebug

      - name: Validate composer.json
        run: composer validate

      - name: Remove composer.lock
        run: rm -f composer.lock

      - name: Clear composer cache
        run: composer clear-cache

      - name: Install dependencies
        run: |
          composer install --prefer-dist --no-progress --no-scripts
          composer dump-autoload --optimize

      - name: Create .env.local
        run: |
          cp .env .env.local
          echo "APP_ENV=test" >> .env.local
          echo "APP_SECRET=test_secret" >> .env.local
          echo "DATABASE_URL=mysql://root:root@127.0.0.1:3306/weather_db_test" >> .env.local
          echo "OPENWEATHERMAP_API_KEY=test_key" >> .env.local
          echo "JWT_SECRET_KEY=test_secret_key" >> .env.local
          echo "JWT_PUBLIC_KEY=test_public_key" >> .env.local
          echo "JWT_PASSPHRASE=test_passphrase" >> .env.local
          echo "CORS_ALLOW_ORIGIN='^https?://(localhost|127\.0\.0\.1)(:[0-9]+)?$'" >> .env.local

      - name: Create database
        run: php bin/console doctrine:database:create --env=test

      - name: Run migrations
        run: php bin/console doctrine:migrations:migrate --env=test --no-interaction

      - name: Run tests
        run: php bin/phpunit

      - name: Check code style
        run: vendor/bin/php-cs-fixer fix --dry-run --diff

      - name: Check static analysis
        run: vendor/bin/phpstan analyse src tests --level=5 